{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","components/generic/Button.js","utils/helpers.js","components/context/TimerContext.js","components/generic/Circle.js","components/generic/Panel.js","components/generic/Label.js","components/generic/Input.js","views/DocumentationView.js","components/generic/TextDisplay.js","components/generic/Settings.js","components/timers/Timer.js","components/generic/TimerSelect.js","views/TimersView.js","components/generic/NavContainer.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","iconSize","panelBackground","icons","play","faPlay","pause","faPause","faFastForward","reset","faUndo","setting","faCog","save","faCheck","colors","Pulse","keyframes","CircleButton","icon","left","top","Button","onClick","calcRadius","strokeWidth","calcCircum","radius","Math","PI","formatNumber","int","toLocaleString","minimumIntegerDigits","useGrouping","convertFromMs","time","milliseconds","seconds","floor","minutes","tabMap","Stopwatch","Countdown","XY","Tabata","TimerContext","createContext","defaultSettings","TimerProvider","children","useState","timerType","setTimerType","percent","setPercent","currentTime","setCurrentTime","currentRound","setCurrentRound","maxRound","setMaxRound","roundType","setRoundType","workLength","setWorkLength","restLength","setRestLength","minuteSetting","setMinuteSetting","secondSetting","setSecondSetting","tabPos","setTabPos","btn1","setBtn1","flipped","setFlipped","timerActive","setTimerActive","btnActive","setBtnActive","roundTime","setRoundTime","resetFlag","setResetFlag","fastForwardFlag","setFastForwardFlag","congratsFlag","setCongratsFlag","easyRoundTime","times","work","rest","calcRoundTime","current","rounds","resetState","softReset","nextRound","useEffect","id","setInterval","count","clearInterval","Provider","value","selectTimer","timer","toggleTimer","ProgressCircle","circle","c","r","circum","calcOffset","Circle","useContext","width","height","propType","PropTypes","number","Panel","Label","label","Input","input","style","position","TimerText","p","RoundText","RoundTypeText","TextDisplay","displayRound","displayRoundType","className","Div","SubLabel","FlexDiv","Settings","showRounds","showRoundType","name","placeholder","onChange","e","target","RelDiv","TopButtonRow","BottomButtonRow","FlipContainer","Flipper","FrontSide","BackSide","Timer","transitionCurve","ListPanel","TimerList","ul","Li","li","Tab","TimerSelect","faStopwatch","faHourglassStart","faClock","faStopwatch20","TimerContainer","App","NavContainer","to","path","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5515254.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faPause,\n  faFastForward,\n  faUndo,\n  faCog,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst iconSize = 70;\nconst panelBackground = \"#0f242e\";\nconst transitionCurve = \"0.8s cubic-bezier(0.81, -0.21, 0.24, 1.09)\";\n\nconst icons = {\n  play: faPlay,\n  pause: faPause,\n  \"fast-forward\": faFastForward,\n  reset: faUndo,\n  setting: faCog,\n  save: faCheck,\n};\n\nconst colors = {\n  play: \"#15cb61\",\n  reset: \"#EF2D56\",\n  pause: \"#ED7D3A\",\n  \"fast-forward\": \"#5398BE\",\n  setting: \"#CB9173\",\n  save: \"#15cb61\",\n};\n\nconst Pulse = keyframes`\n  70% {\n    box-shadow: 0 0 0 20px rgba(255, 255, 255, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);\n  }\n`;\n\nconst CircleButton = styled.div`\n  height: ${iconSize}px;\n  width: ${iconSize}px;\n  position: relative;\n  display: table-cell;\n  vertical-align: middle;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.5s;\n  opacity: 1;\n  box-shadow: 0 0 0 0 rgba(255, 255, 255, 1);\n\n  button {\n    position: absolute;\n  }\n\n  &:active {\n    animation: ${Pulse};\n    animation-iteration-count: 1;\n    animation-duration: 0.5s;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    transition: all 0.25s ease;\n    border-radius: 50%;\n  }\n\n  &::after {\n    box-shadow: inset 0 0 0 1px ${(props) => colors[props.icon]};\n  }\n\n  &::before {\n    background: ${(props) => colors[props.icon]};\n    box-shadow: inset 0 0 0 ${iconSize}px ${panelBackground};\n  }\n\n  &:hover::before {\n    box-shadow: inset 0 0 0 1px ${panelBackground};\n  }\n\n  svg {\n    position: relative;\n    font-size: ${iconSize / 2}px;\n    color: white;\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  height: ${iconSize}px;\n  width: ${iconSize}px;\n  left: ${(props) => props.left}%;\n  top: ${(props) => props.top}%;\n  transition: ${transitionCurve};\n  margin-left: -35px;\n`;\n\nconst Button = ({ icon, onClick, left, top }) => {\n  return (\n    <Wrapper top={top} left={left}>\n      <div onClick={onClick}>\n        <CircleButton icon={icon}>\n          <FontAwesomeIcon icon={icons[icon]} />\n        </CircleButton>\n      </div>\n    </Wrapper>\n  );\n};\n\nButton.propTypes = {\n  icon: PropTypes.oneOf([\n    \"play\",\n    \"pause\",\n    \"reset\",\n    \"save\",\n    \"setting\",\n    \"fast-forward\",\n  ]),\n  left: PropTypes.number,\n  top: PropTypes.number,\n};\n\nexport default Button;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n//Calculates the radius attribute to give to the svg circle\nexport function calcRadius(size, strokeWidth) {\n  return size / 2 - strokeWidth * 2;\n}\n\n//Calculates circumference of circle\nexport function calcCircum(radius) {\n  return radius * 2 * Math.PI;\n}\n\n//Calculates the dash offset to fill the progress circle with appropiate percentage\nexport function calcOffset(radius, percent) {\n  const circum = calcCircum(radius);\n\n  return circum - (circum * percent) / 100;\n}\n\n//Formats single digit numbers to always have two digits\nexport function formatNumber(int) {\n  return int.toLocaleString(\"en-US\", {\n    minimumIntegerDigits: 2,\n    useGrouping: false,\n  });\n}\n\n//Takes an argument in the form of milliseconds and outputs to format MM:SS:MS\nexport function convertFromMs(time) {\n  const milliseconds = formatNumber((time % 1000) / 10);\n  const seconds = formatNumber(Math.floor((time / 1000) % 60));\n  const minutes = formatNumber(Math.floor((time / (1000 * 60)) % 60));\n\n  return `${minutes}:${seconds}:${milliseconds}`;\n}\n\n//Mapping of Timer type to tab position values\nexport const tabMap = {\n  Stopwatch: \"0em\",\n  Countdown: \"10em\",\n  XY: \"20em\",\n  Tabata: \"30em\",\n};\n\n//Calculates percentage based on timer type and timers given (expecting an object with second argument with times)\nexport function calcRoundTime(timerType, times) {\n  if (timerType === \"Stopwatch\" || timerType === \"Countdown\") {\n    return times.minutes * 60000 + times.seconds * 1000;\n  }\n\n  if (timerType === \"XY\") {\n    return times.minutes * 60000 + times.seconds * 1000;\n  }\n\n  if (timerType === \"Tabata\") {\n    if (times.roundType === \"Work\") {\n      return times.work * 1000;\n    } else {\n      return times.rest * 1000;\n    }\n  }\n  return 0;\n}\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { tabMap } from \"../../utils/helpers\";\nimport { calcRoundTime } from \"../../utils/helpers\";\n\nexport const TimerContext = React.createContext({});\n\nconst defaultSettings = {\n  minutes: 1,\n  seconds: 10,\n  rounds: 5,\n  work: 30,\n  rest: 10,\n};\n\nconst TimerProvider = ({ children }) => {\n  const [timerType, setTimerType] = useState(\"Stopwatch\");\n  const [percent, setPercent] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [maxRound, setMaxRound] = useState(defaultSettings[\"rounds\"]);\n  const [roundType, setRoundType] = useState(\"Work\");\n  const [workLength, setWorkLength] = useState(defaultSettings[\"work\"]);\n  const [restLength, setRestLength] = useState(defaultSettings[\"rest\"]);\n  const [minuteSetting, setMinuteSetting] = useState(\n    defaultSettings[\"minutes\"]\n  );\n  const [secondSetting, setSecondSetting] = useState(\n    defaultSettings[\"seconds\"]\n  );\n  const [tabPos, setTabPos] = useState(\"0em\");\n  const [btn1, setBtn1] = useState(\"play\");\n  const [flipped, setFlipped] = useState(false);\n  const [timerActive, setTimerActive] = useState(false);\n  const [btnActive, setBtnActive] = useState(false);\n  const [roundTime, setRoundTime] = useState(0);\n  const [resetFlag, setResetFlag] = useState(false);\n  const [fastForwardFlag, setFastForwardFlag] = useState(false);\n  const [congratsFlag, setCongratsFlag] = useState(false);\n\n  // Function to make getting the round time easier with less typing\n  const easyRoundTime = () => {\n    return calcRoundTime(timerType, {\n      minutes: minuteSetting,\n      seconds: secondSetting,\n      current: currentTime,\n      rounds: maxRound,\n      work: workLength,\n      rest: restLength,\n      roundType: roundType,\n    });\n  };\n\n  //Sets the current timer and animates the moving tab\n  const selectTimer = (timer) => {\n    setTimerType(timer);\n    setTabPos(tabMap[timer]);\n  };\n\n  //Reset state to default settings\n  const resetState = () => {\n    setMinuteSetting(1);\n    setSecondSetting(10);\n    setMaxRound(5);\n    setWorkLength(30);\n    setRestLength(10);\n    setRoundTime(0);\n    setPercent(0);\n    setCongratsFlag(false);\n    if (timerType === \"Countdown\" || timerType === \"XY\") {\n      setCurrentTime(easyRoundTime());\n      setPercent(100);\n    } else {\n      setCurrentTime(0);\n    }\n  };\n\n  //Soft reset for completion, users still retain their settings chosen\n  const softReset = () => {\n    setFlipped(false);\n    setTimerActive(false);\n    setBtnActive(false);\n    setRoundTime(0);\n    setPercent(0);\n    setCurrentTime(0);\n    setCongratsFlag(false);\n  };\n\n  //Sets up users for the next round\n  const nextRound = (time, percent) => {\n    setCurrentRound(currentRound + 1);\n    setPercent(percent);\n    setCurrentTime(time);\n  };\n\n  useEffect(() => {\n    softReset();\n    setFastForwardFlag(false);\n    setCongratsFlag(true);\n  }, [fastForwardFlag]);\n\n  useEffect(() => {\n    resetState();\n    setResetFlag(false);\n  }, [resetFlag]);\n\n  //Resets state upon choosing new timer\n  useEffect(() => {\n    resetState();\n  }, [timerType]);\n\n  //Trigger timer start/pause and calculate total time needed for percentage\n  const toggleTimer = () => {\n    setTimerActive(!timerActive);\n    setBtnActive(true);\n    setCongratsFlag(false);\n  };\n\n  //Start/pause everytime play/pause button is pushed\n  useEffect(() => {\n    if (timerActive) {\n      const id = setInterval(() => {\n        if (timerType === \"Countdown\" || timerType === \"XY\") {\n          setCurrentTime((count) => count - 50);\n        } else {\n          setCurrentTime((count) => count + 50);\n        }\n      }, 50);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [timerActive, timerType]);\n\n  //Calculate each round type and progress bar percentage\n  useEffect(() => {\n    setRoundTime(easyRoundTime);\n    if (currentTime && roundTime) {\n      setPercent((currentTime / roundTime) * 100);\n    }\n  }, [currentTime]);\n\n  useEffect(() => {\n    if (percent >= 100) {\n      //Reset state as countdown and stopwatch timers only have one round\n      if (timerType === \"Stopwatch\") {\n        softReset();\n        setCongratsFlag(true);\n      }\n      if (timerType === \"Tabata\") {\n        if (roundType === \"Work\") {\n          setPercent(0);\n          setRoundType(\"Rest\");\n          setCurrentTime(0);\n        } else if (currentRound < maxRound) {\n          nextRound(0, 0);\n          setRoundType(\"Work\");\n        }\n        if (currentRound === maxRound) {\n          softReset();\n          setCongratsFlag(true);\n          setCongratsFlag(true);\n        }\n      }\n    } else if (percent <= 0) {\n      if (timerType === \"Countdown\") {\n        softReset();\n        setCongratsFlag(true);\n      }\n      if (timerType === \"XY\") {\n        if (currentRound < maxRound) {\n          nextRound(roundTime, 100);\n        } else {\n          softReset();\n          setCongratsFlag(true);\n        }\n      }\n    }\n  }, [percent]);\n  return (\n    <TimerContext.Provider\n      value={{\n        timerType,\n        selectTimer,\n        percent,\n        setPercent,\n        currentTime,\n        setCurrentTime,\n        currentRound,\n        setCurrentRound,\n        maxRound,\n        setMaxRound,\n        roundType,\n        setRoundType,\n        tabPos,\n        btn1,\n        setBtn1,\n        flipped,\n        setFlipped,\n        workLength,\n        setWorkLength,\n        restLength,\n        setRestLength,\n        minuteSetting,\n        setMinuteSetting,\n        secondSetting,\n        setSecondSetting,\n        timerActive,\n        setTimerActive,\n        btnActive,\n        setBtnActive,\n        toggleTimer,\n        roundTime,\n        setResetFlag,\n        setFastForwardFlag,\n        congratsFlag,\n      }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nexport default TimerProvider;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { calcRadius, calcCircum, calcOffset } from \"../../utils/helpers\";\nimport { TimerContext } from \"../context/TimerContext\";\n\nconst progressColor = \"#a80874\";\n\nconst ProgressCircle = styled.circle`\n  stroke: ${(props) => props.color};\n  fill: transparent;\n  cx: ${(props) => props.c}px;\n  cy: ${(props) => props.c}px;\n  stroke-dasharray: ${(props) => calcCircum(props.r)};\n  stroke-dashoffset: ${(props) => calcOffset(props.r, props.percent)};\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n  transition: all 0.3s ease-out;\n`;\n\nconst Circle = ({ size, strokeWidth }) => {\n  const { percent } = useContext(TimerContext);\n\n  return (\n    <svg width={size} height={size}>\n      <ProgressCircle\n        r={calcRadius(size, strokeWidth)}\n        c={size / 2}\n        strokeWidth={strokeWidth}\n        percent={100}\n        color={\"white\"}\n      />\n      <ProgressCircle\n        r={calcRadius(size, strokeWidth)}\n        c={size / 2}\n        strokeWidth={strokeWidth + 1}\n        percent={percent}\n        color={progressColor}\n      />\n    </svg>\n  );\n};\n\nCircle.propType = {\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n};\n\nCircle.defaultProps = {\n  size: 450,\n  strokeWidth: 20,\n};\n\nexport default Circle;\n","import styled from \"styled-components\";\n\nconst Panel = styled.div`\n  margin-top: 1em;\n  margin-bottom: 5em;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  background-color: #0f242e;\n  text-align: center;\n  padding-top: 3em;\n  padding-bottom: 3em;\n  border-radius: 1em;\n`;\n\nexport default Panel;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: white;\n  font-size: 2em;\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  width: 60%;\n  margin-top: 2em;\n  margin-bottom: 1em;\n  color: #a80874;\n  border-radius: 2em;\n  padding: 1em;\n  font-family: Segoe UI;\n  font-weight: bold;\n  padding-right: 3em;\n  margin-right: 1em;\n  flex: 1;\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport Circle from \"../components/generic/Circle\";\nimport Panel from \"../components/generic/Panel\";\nimport Label from \"../components/generic/Label\";\nimport Input from \"../components/generic/Input\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title=\"Loading spinner \"\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description: \"Changes the size of the loading spinner\",\n                type: \"string\",\n                defaultValue: \"medium\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Button \"\n            component={\n              <div style={{ position: \"relative\" }}>\n                <Button icon=\"play\" />\n              </div>\n            }\n            propDocs={[\n              {\n                prop: \"icon\",\n                description: \"Changes color and icon depending on input\",\n                type: \"string\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"left\",\n                description: \"changes css left property for animation purposes\",\n                type: \"number\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"top\",\n                description: \"Changes top position for animation purposes\",\n                type: \"number\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Circle \"\n            component={<Circle size={100} strokeWidth={10} />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description:\n                  \"Determines the width and height of the svg element\",\n                type: \"int\",\n                defaultValue: \"450\",\n              },\n              {\n                prop: \"strokeWidth\",\n                description: \"Determines the thickness of the progress bar\",\n                type: \"int\",\n                defaultValue: \"20\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"panel \"\n            component={<Panel>Panel Content</Panel>}\n            propDocs={[\n              {\n                prop: \"N/A\",\n                description: \"Elevated div for paneling look\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Label \"\n            component={<Label>Label</Label>}\n            propDocs={[\n              {\n                prop: \"N/A\",\n                description: \"White Styled Label\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Label \"\n            component={<Input></Input>}\n            propDocs={[\n              {\n                prop: \"N/A\",\n                description: \"Styled input for taking settings options\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { convertFromMs } from \"../../utils/helpers\";\nimport { TimerContext } from \"../context/TimerContext\";\n\nconst TimerText = styled.p`\n  position: absolute;\n  margin: 0;\n  color: white;\n  top: 45%;\n  left: 50%;\n  font-size: 3em;\n  transform: translate(-50%, -50%);\n`;\n\nconst RoundText = styled(TimerText)`\n  top: 57%;\n  font-size: 1.5em;\n  font-weight: bold;\n`;\n\nconst RoundTypeText = styled(RoundText)`\n  top: 67%;\n  font-size: 1.2em;\n`;\n\nconst TextDisplay = () => {\n  const { timerType, currentTime, currentRound, roundType, congratsFlag } =\n    useContext(TimerContext);\n  const displayRound = timerType === \"XY\" || timerType === \"Tabata\";\n  const displayRoundType = timerType === \"Tabata\";\n\n  return (\n    <>\n      {congratsFlag && <TimerText>Nice job!</TimerText>}\n      {!congratsFlag && <TimerText>{convertFromMs(currentTime)}</TimerText>}\n      {congratsFlag && <RoundText className=\"fadeIn2\">Try Again?</RoundText>}\n      {displayRound && !congratsFlag && (\n        <RoundText>Round {currentRound}</RoundText>\n      )}\n      {displayRoundType && !congratsFlag && (\n        <RoundTypeText>{roundType}</RoundTypeText>\n      )}\n    </>\n  );\n};\n\nexport default TextDisplay;\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport Label from \"./Label\";\nimport { TimerContext } from \"../context/TimerContext\";\n\nconst Div = styled.div`\n  text-align: center;\n  height: 100%;\n`;\n\nconst SubLabel = styled(Label)`\n  font-size: 1em;\n  text-align: left;\n  margin-left: 1em;\n  flex: 0.5;\n`;\n\nconst FlexDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nconst Settings = () => {\n  const {\n    flipped,\n    setFlipped,\n    minuteSetting,\n    setMinuteSetting,\n    secondSetting,\n    setSecondSetting,\n    maxRound,\n    setMaxRound,\n    workLength,\n    setWorkLength,\n    restLength,\n    setRestLength,\n    timerType,\n  } = useContext(TimerContext);\n  const showRounds = timerType === \"XY\" || timerType === \"Tabata\";\n  const showRoundType = timerType === \"Tabata\";\n\n  return (\n    <Div>\n      <div>\n        <Label>Settings</Label>\n      </div>\n      {!showRoundType && (\n        <FlexDiv>\n          <SubLabel>Minutes: </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Minutes\"\n            placeholder=\"Minutes\"\n            onChange={(e) => setMinuteSetting(e.target.value)}\n            value={minuteSetting}\n          />\n        </FlexDiv>\n      )}\n      {!showRoundType && (\n        <FlexDiv>\n          <SubLabel>Seconds: </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Seconds\"\n            placeholder=\"Seconds\"\n            onChange={(e) => setSecondSetting(e.target.value)}\n            value={secondSetting}\n          />\n        </FlexDiv>\n      )}\n      {showRounds && (\n        <FlexDiv>\n          <SubLabel>Rounds: </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Rounds\"\n            placeholder=\"Total Rounds\"\n            value={maxRound}\n            onChange={(e) => setMaxRound(e.target.value)}\n          />\n        </FlexDiv>\n      )}\n      {showRoundType && (\n        <FlexDiv>\n          <SubLabel>Work(seconds): </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Work\"\n            placeholder=\"Work Period\"\n            value={workLength}\n            onChange={(e) => setWorkLength(e.target.value)}\n          />\n        </FlexDiv>\n      )}\n      {showRoundType && (\n        <FlexDiv>\n          <SubLabel>Rest(seconds): </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Rest\"\n            placeholder=\"Rest Period\"\n            value={restLength}\n            onChange={(e) => setRestLength(e.target.value)}\n          />\n        </FlexDiv>\n      )}\n      <Button\n        icon=\"save\"\n        top={80}\n        left={50}\n        onClick={() => setFlipped(!flipped)}\n      />\n    </Div>\n  );\n};\n\nexport default Settings;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport Panel from \"../generic/Panel\";\nimport Circle from \"../generic/Circle\";\nimport TextDisplay from \"../generic/TextDisplay\";\nimport Button from \"../generic/Button\";\nimport { TimerContext } from \"../context/TimerContext\";\nimport Settings from \"../generic/Settings\";\n\n//Circle size settings\nconst circleSize = 450;\nconst circleStroke = 20;\n\nconst RelDiv = styled.div`\n  position: relative;\n`;\n\nconst TopButtonRow = styled.div`\n  margin-top: 1em;\n  margin-right: 1em;\n  position: relative;\n  height: 4.5em;\n`;\n\nconst BottomButtonRow = styled.div`\n  height: 5em;\n  position: relative;\n  margin-top: 1em;\n  width: 100%;\n`;\n\nconst FlipContainer = styled.div`\n  perspective: 1000px;\n`;\n\nconst Flipper = styled(Panel)`\n  &.flip {\n    transform: rotateY(180deg);\n  }\n  transition: 0.6s;\n  transform-style: preserve-3d;\n  position: relative;\n  height: 38em;\n  width: 28.1em;\n`;\n\nconst FrontSide = styled.div`\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst BackSide = styled(FrontSide)`\n  background-color: #0f242e;\n  transform: rotateY(180deg);\n  height: 43em;\n  width: 28.1em;\n  border-radius: 1em;\n`;\n\nconst Timer = () => {\n  const {\n    flipped,\n    setFlipped,\n    btnActive,\n    toggleTimer,\n    timerActive,\n    setFastForwardFlag,\n    setResetFlag,\n  } = useContext(TimerContext);\n\n  return (\n    <FlipContainer>\n      <Flipper className={flipped ? \"flip\" : \"\"}>\n        <FrontSide>\n          <TopButtonRow>\n            <Button\n              icon={\"setting\"}\n              top={10}\n              left={90}\n              onClick={() => setFlipped(!flipped)}\n            />\n          </TopButtonRow>\n          <RelDiv>\n            <Circle size={circleSize} strokeWidth={circleStroke} />\n            <TextDisplay />\n          </RelDiv>\n          <BottomButtonRow>\n            <Button\n              icon={\"reset\"}\n              left={btnActive ? 20 : 50}\n              top={40}\n              onClick={() => setResetFlag(true)}\n            />\n            <Button\n              icon={\"fast-forward\"}\n              left={btnActive ? 80 : 50}\n              top={40}\n              onClick={() => setFastForwardFlag(true)}\n            />\n            <Button\n              icon={timerActive ? \"pause\" : \"play\"}\n              left={50}\n              top={40}\n              onClick={() => toggleTimer()}\n            />\n          </BottomButtonRow>\n        </FrontSide>\n        <BackSide>\n          <Settings />\n        </BackSide>\n      </Flipper>\n    </FlipContainer>\n  );\n};\n\nexport default Timer;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStopwatch,\n  faClock,\n  faHourglassStart,\n  faStopwatch20,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Panel from \"./Panel\";\nimport { TimerContext } from \"../context/TimerContext\";\n\nconst transitionCurve = \"0.8s cubic-bezier(0.81, -0.21, 0.24, 1.09)\";\n\nconst ListPanel = styled(Panel)`\n  padding: 0;\n  width: 40em;\n  height: 4.05em;\n  position: relative;\n`;\n\nconst TimerList = styled.ul`\n  list-style: none;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  z-index: 2;\n\n  .clock-icon,\n  .hour-glass-icon {\n    font-size: 0.87em;\n    margin-right: 0.5em;\n  }\n\n  .stopwatch-icon {\n    margin-right: 0.4em;\n  }\n\n  svg {\n    margin-right: 0.2em;\n  }\n`;\n\nconst Li = styled.li`\n  color: white;\n  font-size: 1.2em;\n  padding-top: 1em;\n  padding-bottom: 1em;\n  border-radius: 0.6em;\n  flex: 1 0 25%;\n  transition: ${transitionCurve};\n\n  :hover {\n    cursor: pointer;\n  }\n\n  &&.selected {\n    color: #a80874 !important;\n    transition: ${transitionCurve};\n  }\n`;\n\nconst Tab = styled.div`\n  position: absolute;\n  width: 10em;\n  height: 100%;\n  top: 0;\n  background-color: white;\n  border-radius: 0.5em;\n  z-index: 1;\n  left: ${(props) => props.left};\n  transition: ${transitionCurve};\n`;\n\nconst TimerSelect = () => {\n  const { timerType, selectTimer, tabPos } = useContext(TimerContext);\n\n  return (\n    <ListPanel>\n      <TimerList>\n        <Li\n          onClick={() => selectTimer(\"Stopwatch\")}\n          className={timerType === \"Stopwatch\" ? \"selected\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faStopwatch} /> Stopwatch\n        </Li>\n        <Li\n          onClick={() => selectTimer(\"Countdown\")}\n          className={timerType === \"Countdown\" ? \"selected\" : \"\"}\n        >\n          <FontAwesomeIcon\n            icon={faHourglassStart}\n            className=\"hour-glass-icon\"\n          />\n          Countdown\n        </Li>\n        <Li\n          onClick={() => selectTimer(\"XY\")}\n          className={timerType === \"XY\" ? \"selected\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faClock} className=\"clock-icon\" />X Y\n        </Li>\n        <Li\n          onClick={() => selectTimer(\"Tabata\")}\n          className={timerType === \"Tabata\" ? \"selected\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faStopwatch20} className=\"stopwatch-icon\" />\n          Tabata\n        </Li>\n      </TimerList>\n      <Tab left={tabPos} />\n    </ListPanel>\n  );\n};\n\nexport default TimerSelect;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Timer from \"../components/timers/Timer\";\nimport TimerProvider from \"../components/context/TimerContext\";\nimport TimerSelect from \"../components/generic/TimerSelect\";\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction App() {\n  return (\n    <TimerProvider>\n      <TimerContainer>\n        <TimerSelect />\n        <Timer />\n      </TimerContainer>\n    </TimerProvider>\n  );\n}\n\nexport default App;\n","import styled from \"styled-components\";\n\nconst NavContainer = styled.div`\n  background-color: #186bf2;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.23);\n  margin-bottom: 3%;\n\n  ul {\n    margin-top: 0;\n    list-style: none;\n    padding: 1em;\n    display: flex;\n    justify-content: end;\n    color: white;\n  }\n\n  li {\n    margin-right: 1em;\n  }\n\n  li:first-child {\n    margin-right: auto;\n  }\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #2b193d;\n  }\n`;\n\nexport default NavContainer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport NavContainer from \"./components/generic/NavContainer\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <NavContainer>\n          <nav>\n            <ul>\n              <li>Aali2537 Assignment 2</li>\n              <li>\n                <Link to=\"/\">Timers</Link>\n              </li>\n              <li>\n                <Link to=\"/docs\">Documentation</Link>\n              </li>\n            </ul>\n          </nav>\n        </NavContainer>\n        <Switch>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimersView />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}